Task 4: Reflections on your git workflow

** The differences between command based method and using git within the atom

For github for Atom, a text editor is at the core of a developer's toolbox, but it does not usually work alone.
This method works with Git and GitHub directly from Atom with the GitHub package.
Atom has built in support for projects stored in a Git repository, providing core APIs and also including packages that add Git specific features.

For command based method, we have to work on Command Prompt to upload the file on the GitHub.
So we should always copy the clone address and attach at Command Prompt to clone it. Then "git add", " git commit -m <message>" and "git push" in order.

Between these two methods, I felt that command based method which we used in lab #1 and #2 is more convenience. Because I was using this method until now to do the assignment and am using in other classes as well. 


How to use git from within NetBeans

** Cloning a Git Repository

1. Choose Team > Git > Clone from the main menu. The Clone Repository wizard displays.

2. At the Repository page, specify the path to a Git repository location, user name and password (you can save them for the future if required).

3. (Optional) Click Proxy Configuration to display the Options dialog box and set the proxy server settings. Click OK when finished.

4. Click Next to switch to the next step of the wizard.

5. At the Remote Branches page, select the repository branch(es) to be fetched (downloaded to your local repository. Click Next.

6. At the Destination Directory page, specify the following:
	* In the Parent Directory field, the path to the directory intended for the cloned repository on your hard drive. 
	    The Parent Directory field is pre-filled with the path to the default NetBeansProjects directory where all NetBeans projects are stored.
	* In the Clone Name field, the name of the local folder where the original project will be cloned to. 
	* By default Clone Name is filled out with the actual Git repository name.
	* In the Checkout Branch field, select the branch to be checked out into the working tree.
	* In the Remote Name field, the name that represents the original repository being cloned.
	   origin is the default alias of the repository being cloned. It is a recommended value.
	* Leave the Scan for NetBeans Projects after Clone checkbox selected to activate after-scanning right after the clone finishes.

7. Click Finish.


** Adding Files to a Git Repository

1. In the Projects window, right-click the file you want to add.

2. In the context menu, choose Git > Add. This adds the file contents to the Index before you commit it.

3. In the Projects window, right-click the file you want to commit.

4. In the Commit dialog box, select the Changes

5. Commit the file(s) as described in the Committing Sources to a Repository section below.

Or 

1. In the Projects window, right-click the file you want to commit.

2. In the context menu, choose Git > Commit.

3. In the Commit dialog box, select the Select the Changes between HEAD and Working Tree toggle button

4. Commit the file(s) as described in the Committing Sources to a Repository section below.
